
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local Client = Players.LocalPlayer
local Orbs = Workspace["__THINGS"].Orbs

local orbToggle = false;

local function collectOrbs()
    if orbToggle and Client.Character and Client.Character:FindFirstChild("HumanoidRootPart") then
        local HRP = Client.Character.HumanoidRootPart
        for _, orb in pairs(Orbs:GetChildren()) do
            orb.CFrame = HRP.CFrame
        end
    end
end
RunService.Heartbeat:Connect(collectOrbs) -- Always listening, but action depends on toggle

local ShydeHub = {}
ShydeHub.__index = ShydeHub

function ShydeHub.new(screenGui)
    local self = setmetatable({screenGui = screenGui, elements = {}, nextY = 0, currentTab = 1}, ShydeHub)
    self.frame = Instance.new("Frame", screenGui)
    self.frame.Size = UDim2.new(0, 300, 0, 300)
    self.frame.Position = UDim2.new(0.5, -150, 0, 0)
    self.frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)

    -- Create a close button
    self.closeButton = Instance.new("TextButton")
    self.closeButton.Size = UDim2.new(0, 30, 0, 30)
    self.closeButton.Position = UDim2.new(1, -35, 0, 5)
    self.closeButton.Text = "X"
    self.closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    self.closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    self.closeButton.Parent = self.frame
    self.closeButton.MouseButton1Click:Connect(function()
        self.frame.Parent = nil -- Remove the frame when the close button is clicked
    end)

    return self
end

function ShydeHub:UpdateLayout()
    local yOffset = 40
    for i, element in ipairs(self.elements) do
        element.Frame.Position = UDim2.new(0, (i - 1) * 85, 0, yOffset)
        element.Frame.Visible = i == self.currentTab
    end
end

function ShydeHub:CreateTab(text)
    local tabButton = Instance.new("TextButton")
    tabButton.Size = UDim2.new(0, 80, 0, 30)
    tabButton.Text = text
    tabButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tabButton.Parent = self.frame

    local tabFrame = Instance.new("Frame")
    tabFrame.Size = UDim2.new(1, 0, 1, 0)
    tabFrame.Position = UDim2.new(0, 0, 0, 40)
    tabFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    tabFrame.Visible = false
    tabFrame.Parent = self.frame

    table.insert(self.elements, {Button = tabButton, Frame = tabFrame})

    tabButton.MouseButton1Click:Connect(function()
        self.currentTab = #self.elements
        self:UpdateLayout()
    end)

    self:UpdateLayout()
    return tabFrame
end

-- Modify other create functions to include a "tab" parameter and use it to specify which tab they belong to
function ShydeHub:CreateToggle(tab, text, currentValue, callback)
    local toggle = Instance.new("TextButton")
    toggle.Size = UDim2.new(0, 280, 0, 30)
    toggle.Text = currentValue and "On" or "Off"
    toggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    toggle.Parent = tab.Frame
    toggle.MouseButton1Click:Connect(function()
        currentValue = not currentValue
        toggle.Text = currentValue and "On" or "Off"
        callback(currentValue)
    end)
    self:UpdateLayout()
    return toggle
end

function ShydeHub:CreateButton(tab, text, callback)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 280, 0, 30)
    button.Text = text
    button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    button.Parent = tab.Frame
    button.MouseButton1Click:Connect(callback)
    self:UpdateLayout()
    return button
end

function ShydeHub:CreateSlider(tab, min, max, currentValue, callback)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Size = UDim2.new(0, 280, 0, 30)
    sliderFrame.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
    sliderFrame.Parent = tab.Frame

    local sliderButton = Instance.new("TextButton")
    sliderButton.Size = UDim2.new(0, 25, 1, 0)
    sliderButton.Text = ""
    sliderButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    sliderButton.Parent = sliderFrame

    local function updateSlider(position)
        currentValue = math.clamp(min + ((max - min) * ((position.X - sliderFrame.AbsolutePosition.X) / sliderFrame.AbsoluteSize.X)), min, max)
        sliderButton.Position = UDim2.new(0, position.X - sliderFrame.AbsolutePosition.X, 0, 0)
        callback(currentValue)
    end

    sliderButton.MouseButton1Down:Connect(function()
        local moveConnection
        moveConnection = game:GetService("UserInputService").InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement then
                updateSlider(input.Position)
            end
        end)

        local upConnection
        upConnection = game:GetService("UserInputService").InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                moveConnection:Disconnect()
                upConnection:Disconnect()
            end
        end)
    end)

    self:UpdateLayout()
    updateSlider(UDim2.new(0, currentValue / max * sliderFrame.AbsoluteSize.X, 0, 0).Position)
    return sliderFrame
end

function ShydeHub:CreateNotification(tab, text, duration)
    local notification = Instance.new("TextLabel")
    notification.Size = UDim2.new(0, 280, 0, 30)
    notification.Text = text
    notification.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    notification.TextColor3 = Color3.fromRGB(255, 255, 255)
    notification.Parent = tab.Frame
    self:UpdateLayout()

    game:GetService("Debris"):AddItem(notification, duration)
    return notification
end

function ShydeHub:CreateTextbox(tab, placeholderText, currentValue, callback)
    local textbox = Instance.new("TextBox")
    textbox.Size = UDim2.new(0, 280, 0, 30)
    textbox.Text = currentValue
    textbox.PlaceholderText = placeholderText
    textbox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    textbox.Parent = tab.Frame
    textbox.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            callback(textbox.Text)
        end
    end)
    self:UpdateLayout()
    return textbox
end


local playerGui = game.Players.LocalPlayer:WaitForChild("PlayerGui")
local screenGui = Instance.new("ScreenGui", playerGui)

local hub = ShydeHub.new(screenGui)
hub:CreateTab("Tab 1")
hub:CreateToggle("Toggle Me", true, function(state) print("Toggle state: " .. tostring(state)) end)
hub:CreateButton("Click Me", function() print("Button clicked") end)
hub:CreateSlider(0, 100, 50, function(value) print("Slider value: " .. tostring(value)) end)
hub:CreateNotification("Hello, World!", 5)
hub:CreateTextbox("Type here...", "Sample text", function(text) print("Textbox input: " .. text) end)
